apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: eni-manager
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: aws-multi-eni-controller
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app: eni-manager
spec:
  selector:
    matchLabels:
      app: eni-manager
  template:
    metadata:
      labels:
        app: eni-manager
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      hostNetwork: true
      containers:
      - name: eni-manager
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          privileged: true
          capabilities:
            add: ["NET_ADMIN"]
        env:
        - name: COMPONENT
          value: "eni-manager"
        - name: AWS_REGION
          value: "{{ .Values.awsRegion }}"
        - name: LOG_LEVEL
          value: "{{ .Values.logLevel }}"
        - name: DEFAULT_MTU
          value: "{{ .Values.eniManager.defaultMTU | default "0" }}"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        {{- if .Values.metrics.enabled }}
        - name: METRICS_PORT
          value: "{{ .Values.metrics.port }}"
        {{- end }}
        {{- if .Values.eniManager.dpdk }}
        # DPDK Configuration
        - name: ENABLE_DPDK
          value: "{{ .Values.eniManager.dpdk.enabled }}"
        - name: DEFAULT_DPDK_DRIVER
          value: "{{ .Values.eniManager.dpdk.driver }}"
        - name: DPDK_BINDING_SCRIPT
          value: "{{ .Values.eniManager.dpdk.bindingScript }}"
        - name: SRIOV_DP_CONFIG_PATH
          value: "{{ .Values.eniManager.dpdk.sriovDPConfigPath }}"
        {{- if .Values.eniManager.dpdk.resourceNames }}
        - name: DPDK_RESOURCE_NAMES
          value: "{{ .Values.eniManager.dpdk.resourceNames }}"
        {{- end }}
        {{- end }}
        args:
        - --check-interval={{ .Values.eniManager.checkInterval }}
        - --debug={{ .Values.eniManager.debug }}
        - --eni-pattern={{ .Values.eniManager.eniPattern }}
        - --ignore-interfaces={{ .Values.eniManager.ignoreInterfaces }}
        - --use-netlink={{ .Values.eniManager.useNetlink }}
        resources:
          {{- toYaml .Values.resources.manager | nindent 10 }}
        {{- if .Values.metrics.enabled }}
        ports:
        - name: metrics
          containerPort: {{ .Values.metrics.port }}
          protocol: TCP
        {{- end }}
        volumeMounts:
        - name: host-sys
          mountPath: /host/sys
        - name: host-proc
          mountPath: /host/proc
        - name: host-run
          mountPath: /host/run
        {{- if .Values.eniManager.dpdk }}
        - name: dpdk-tools
          mountPath: /opt/dpdk
        - name: sriov-dp-config
          mountPath: /etc/pcidp
        {{- end }}
      volumes:
      - name: host-sys
        hostPath:
          path: /sys
      - name: host-proc
        hostPath:
          path: /proc
      - name: host-run
        hostPath:
          path: /run
      {{- if .Values.eniManager.dpdk }}
      - name: dpdk-tools
        hostPath:
          path: /opt/dpdk
          type: DirectoryOrCreate
      - name: sriov-dp-config
        hostPath:
          path: /etc/pcidp
          type: DirectoryOrCreate
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
