apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "6"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"app":"eni-manager"},"name":"eni-manager","namespace":"eni-controller-system"},"spec":{"selector":{"matchLabels":{"app":"eni-manager"}},"template":{"metadata":{"labels":{"app":"eni-manager"}},"spec":{"containers":[{"args":["--check-interval=30s","--debug=true","--eni-pattern=^(eth|ens|eni|en)[0-9]+","--ignore-interfaces=tunl0,gre0,gretap0,erspan0,ip_vti0,ip6_vti0,sit0,ip6tnl0,ip6gre0","--use-netlink=true"],"env":[{"name":"COMPONENT","value":"eni-manager"},{"name":"DEFAULT_MTU","value":"0"},{"name":"NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"AWS_REGION","value":"us-east-1"},{"name":"ENABLE_DPDK","value":"true"},{"name":"DEFAULT_DPDK_DRIVER","value":"vfio-pci"},{"name":"DPDK_BINDING_SCRIPT","value":"/opt/dpdk/dpdk-devbind.py"},{"name":"SRIOV_DP_CONFIG_PATH","value":"/etc/pcidp/config.json"}],"image":"johnlam90/aws-multi-eni-controller:sandbox-dpdk-sriov-pci-fix","name":"eni-manager","resources":{"limits":{"cpu":"100m","memory":"128Mi"},"requests":{"cpu":"50m","memory":"64Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN"]},"privileged":true},"volumeMounts":[{"mountPath":"/host/sys","name":"host-sys"},{"mountPath":"/host/proc","name":"host-proc"},{"mountPath":"/host/run","name":"host-run"},{"mountPath":"/opt/dpdk","name":"dpdk-tools"},{"mountPath":"/etc/pcidp","name":"sriov-dp-config"}]}],"hostNetwork":true,"initContainers":[{"args":["echo \"Setting up DPDK environment...\"\n# Install required packages\napk --no-cache add kmod pciutils python3 build-base linux-headers git\n\n# Check if we're running on Amazon Linux 2\nif [ -f /etc/os-release ] \u0026\u0026 grep -q \"Amazon Linux 2\" /etc/os-release; then\n  echo \"Running on Amazon Linux 2, installing kernel modules\"\n  # Install kernel modules on the host\n  nsenter -t 1 -m -u -i -n -p -- yum install -y kernel-modules-extra || echo \"Failed to install kernel-modules-extra\"\nfi\n\n# Check if vfio-pci is already loaded with WC support\nif lsmod | grep -q vfio_pci; then\n  echo \"vfio-pci module is already loaded\"\nelse\n  echo \"Loading vfio and vfio-pci modules\"\n  nsenter -t 1 -m -u -i -n -p -- modprobe vfio || echo \"Failed to load vfio module\"\n  nsenter -t 1 -m -u -i -n -p -- modprobe vfio-pci || echo \"Failed to load vfio-pci module\"\nfi\n\n# Enable unsafe NOIOMMU mode\nnsenter -t 1 -m -u -i -n -p -- bash -c 'echo 1 \u003e /sys/module/vfio/parameters/enable_unsafe_noiommu_mode' || echo \"Failed to enable unsafe NOIOMMU mode\"\n\n# Copy DPDK binding script to host\nmkdir -p /host/usr/bin\ncp -f /opt/dpdk/dpdk-devbind.py /host/usr/bin/\nchmod 755 /host/usr/bin/dpdk-devbind.py\n\n# Create module load configuration for persistence across reboots\nmkdir -p /host/etc/modules-load.d\necho \"vfio\" \u003e /host/etc/modules-load.d/dpdk.conf\necho \"vfio-pci\" \u003e\u003e /host/etc/modules-load.d/dpdk.conf\nchmod 644 /host/etc/modules-load.d/dpdk.conf\n\n# Create modprobe configuration for persistence across reboots\nmkdir -p /host/etc/modprobe.d\necho \"options vfio enable_unsafe_noiommu_mode=1\" \u003e /host/etc/modprobe.d/dpdk.conf\nchmod 644 /host/etc/modprobe.d/dpdk.conf\n\n# Check if vfio-pci has Write Combining support\nif grep -q \"write-combining\" /sys/kernel/debug/x86/pat_memtype_list 2\u003e/dev/null; then\n  echo \"Write Combining is already enabled\"\nelse\n  echo \"Write Combining is not enabled, attempting to patch vfio-pci\"\n\n  # Use the pre-packaged patch script\n  cd /opt/dpdk/scripts\n\n  # Run the patch script to enable Write Combining\n  nsenter -t 1 -m -u -i -n -p -- /opt/dpdk/scripts/get-vfio-with-wc.sh || echo \"Failed to patch vfio-pci for Write Combining\"\nfi\n\necho \"DPDK setup completed successfully.\"\n"],"command":["/bin/sh","-c"],"image":"alpine:3.19","name":"dpdk-setup","securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/sys","name":"host-sys"},{"mountPath":"/host","name":"host-root"},{"mountPath":"/opt/dpdk","name":"dpdk-tools"}]}],"nodeSelector":{"ng":"multi-eni"},"serviceAccountName":"eni-controller","volumes":[{"hostPath":{"path":"/sys"},"name":"host-sys"},{"hostPath":{"path":"/proc"},"name":"host-proc"},{"hostPath":{"path":"/run"},"name":"host-run"},{"hostPath":{"path":"/"},"name":"host-root"},{"configMap":{"defaultMode":493,"name":"dpdk-tools"},"name":"dpdk-tools"},{"hostPath":{"path":"/etc/pcidp","type":"DirectoryOrCreate"},"name":"sriov-dp-config"}]}}}}
  creationTimestamp: "2025-05-20T05:47:17Z"
  generation: 6
  labels:
    app: eni-manager
  name: eni-manager
  namespace: eni-controller-system
  resourceVersion: "12257570"
  uid: c04b5b6e-6804-49ec-b48e-663b2fb060b5
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: eni-manager
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: eni-manager
    spec:
      containers:
      - args:
        - --check-interval=30s
        - --debug=true
        - --eni-pattern=^(eth|ens|eni|en)[0-9]+
        - --ignore-interfaces=tunl0,gre0,gretap0,erspan0,ip_vti0,ip6_vti0,sit0,ip6tnl0,ip6gre0
        - --use-netlink=true
        env:
        - name: COMPONENT
          value: eni-manager
        - name: DEFAULT_MTU
          value: "0"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: AWS_REGION
          value: us-east-1
        - name: ENABLE_DPDK
          value: "true"
        - name: DEFAULT_DPDK_DRIVER
          value: vfio-pci
        - name: DPDK_BINDING_SCRIPT
          value: /opt/dpdk/dpdk-devbind.py
        - name: SRIOV_DP_CONFIG_PATH
          value: /etc/pcidp/config.json
        image: johnlam90/aws-multi-eni-controller:v1.2.10-dpdk-reboot-fix
        imagePullPolicy: IfNotPresent
        name: eni-manager
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /host/sys
          name: host-sys
        - mountPath: /host/proc
          name: host-proc
        - mountPath: /host/run
          name: host-run
        - mountPath: /opt/dpdk
          name: dpdk-tools
        - mountPath: /etc/pcidp
          name: sriov-dp-config
      dnsPolicy: ClusterFirst
      hostNetwork: true
      initContainers:
      - args:
        - |
          echo "Setting up DPDK environment..."
          # Install required packages
          apk --no-cache add kmod pciutils python3 build-base linux-headers git

          # Check if we're running on Amazon Linux 2
          if [ -f /etc/os-release ] && grep -q "Amazon Linux 2" /etc/os-release; then
            echo "Running on Amazon Linux 2, installing kernel modules"
            # Install kernel modules on the host
            nsenter -t 1 -m -u -i -n -p -- yum install -y kernel-modules-extra || echo "Failed to install kernel-modules-extra"
          fi

          # Check if vfio-pci is already loaded with WC support
          if lsmod | grep -q vfio_pci; then
            echo "vfio-pci module is already loaded"
          else
            echo "Loading vfio and vfio-pci modules"
            nsenter -t 1 -m -u -i -n -p -- modprobe vfio || echo "Failed to load vfio module"
            nsenter -t 1 -m -u -i -n -p -- modprobe vfio-pci || echo "Failed to load vfio-pci module"
          fi

          # Enable unsafe NOIOMMU mode
          nsenter -t 1 -m -u -i -n -p -- bash -c 'echo 1 > /sys/module/vfio/parameters/enable_unsafe_noiommu_mode' || echo "Failed to enable unsafe NOIOMMU mode"

          # Copy DPDK binding script to host
          mkdir -p /host/usr/bin
          cp -f /opt/dpdk/dpdk-devbind.py /host/usr/bin/
          chmod 755 /host/usr/bin/dpdk-devbind.py

          # Create module load configuration for persistence across reboots
          mkdir -p /host/etc/modules-load.d
          echo "vfio" > /host/etc/modules-load.d/dpdk.conf
          echo "vfio-pci" >> /host/etc/modules-load.d/dpdk.conf
          chmod 644 /host/etc/modules-load.d/dpdk.conf

          # Create modprobe configuration for persistence across reboots
          mkdir -p /host/etc/modprobe.d
          echo "options vfio enable_unsafe_noiommu_mode=1" > /host/etc/modprobe.d/dpdk.conf
          chmod 644 /host/etc/modprobe.d/dpdk.conf

          # Check if vfio-pci has Write Combining support
          if grep -q "write-combining" /sys/kernel/debug/x86/pat_memtype_list 2>/dev/null; then
            echo "Write Combining is already enabled"
          else
            echo "Write Combining is not enabled, attempting to patch vfio-pci"

            # Use the pre-packaged patch script
            cd /opt/dpdk/scripts

            # Run the patch script to enable Write Combining
            nsenter -t 1 -m -u -i -n -p -- /opt/dpdk/scripts/get-vfio-with-wc.sh || echo "Failed to patch vfio-pci for Write Combining"
          fi

          echo "DPDK setup completed successfully."
        command:
        - /bin/sh
        - -c
        image: alpine:3.19
        imagePullPolicy: IfNotPresent
        name: dpdk-setup
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /sys
          name: host-sys
        - mountPath: /host
          name: host-root
        - mountPath: /opt/dpdk
          name: dpdk-tools
      nodeSelector:
        ng: multi-eni
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: eni-controller
      serviceAccountName: eni-controller
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /sys
          type: ""
        name: host-sys
      - hostPath:
          path: /proc
          type: ""
        name: host-proc
      - hostPath:
          path: /run
          type: ""
        name: host-run
      - hostPath:
          path: /
          type: ""
        name: host-root
      - configMap:
          defaultMode: 493
          name: dpdk-tools
        name: dpdk-tools
      - hostPath:
          path: /etc/pcidp
          type: DirectoryOrCreate
        name: sriov-dp-config
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
status:
  currentNumberScheduled: 1
  desiredNumberScheduled: 1
  numberAvailable: 1
  numberMisscheduled: 0
  numberReady: 1
  observedGeneration: 6
  updatedNumberScheduled: 1
